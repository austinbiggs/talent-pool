generator client {
  provider = "prisma-client-js"
  output   = "../../../../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model candidate_educations {
  id           String     @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  candidate_id String     @db.Uuid
  end_date     DateTime   @db.Date
  school_id    String     @db.Uuid
  start_date   DateTime   @db.Date
  candidates   candidates @relation(fields: [candidate_id], references: [id], onDelete: Cascade)
  schools      schools    @relation(fields: [school_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model candidate_profiles {
  id           String     @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  candidate_id String     @unique @db.Uuid
  candidates   candidates @relation(fields: [candidate_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model candidate_work_experiences {
  id           String     @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  candidate_id String     @unique @db.Uuid
  candidates   candidates @relation(fields: [candidate_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model candidates {
  id                         String                      @id(map: "candidate_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                 DateTime                    @default(now()) @db.Timestamptz(6)
  first_name                 String
  last_name                  String
  sex                        String
  candidate_educations       candidate_educations[]
  candidate_profiles         candidate_profiles?
  candidate_work_experiences candidate_work_experiences?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model education_majors {
  id         String   @id(map: "majors_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String   @unique(map: "majors_name_key")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model education_minors {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String   @unique
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model school_locations {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  city       String
  state      String
  school_id  String   @unique @db.Uuid
  schools    schools  @relation(fields: [school_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schools {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  name                 String                 @unique
  candidate_educations candidate_educations[]
  school_locations     school_locations?
}
